pipeline {
    options {
      timeout(time: 1, unit: 'HOURS') 
			}
  agent {
    docker {
      image 'yatu10/snowflake-sqitch_21nov'
      args "-u root -v /var/run/docker.sock:/var/run/docker.sock --entrypoint=''"
		   }
		}
  stages {
    stage('Moving .snowsql to workspace and replacing snowsql in /bin') {
        steps {
            sh '''
            # rm /bin/snowsql 
            # mv /var/snowsql /bin/
            # mv /var/.snowsql ./
	            whoami
            ''' 
        }
	  }
	  
    stage('Initialize Sqitch') {
    	steps{
    		sh '''
	      #mkdir testsnow 	
	      #cd testsnow
	      #sqitch init snowjenkinstest --uri https://github.com/yatinorgtest/snowflake_deployment/ --engine snowflake
              #if [ echo $? != 0 ]; then 
              #sqitch init snowjenkinstest --uri https://github.com/yatinorgtest/snowflake_deployment/ --engine snowflake
              #else
	      cat sqitch.conf
	      cat sqitch.plan
	      snowsql -v
	      #sqitch add appschema -n 'Add schema for all snowjenkinstest objects.'
	      #echo "USE WAREHOUSE COMPUTE_WH;

              #-- XXX Add DDLs here.

              #CREATE SCHEMA JenkinsTest;" > deploy/appschema.sql
              #fi
              '''
               
    		}
	}
    stage('Deploy changes') {
      steps {
        withCredentials(bindings: [usernamePassword(credentialsId: 'snowflake_creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) 
        {
          sh '''
	      #pwd
	      #ls -la
	      cat deploy/appschema.sql
              sqitch deploy "db:snowflake://amrutdengre:NewStart123@vxa95806.us-east-1/DEMO_DB?Driver=Snowflake"
              '''           
        }
      }
    }
    stage('Verify changes') {
      steps {
        withCredentials(bindings: [usernamePassword(credentialsId: 'snowflake_creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          sh '''
              sqitch verify "db:snowflake://amrutdengre:NewStart123@vxa95806.us-east-1/DEMO_DB?Driver=Snowflake"
              ''' 
        }
      }
    }
  }
	post {
    always {
      sh 'chmod -R 777 .'
    }
  }
  }
